from django.core.validators import MaxValueValidator, MinValueValidator
from django.db import models

from users.models import User


class Category(models.Model):
    rank = models.CharField('–ó–≤–∞–Ω–∏–µ', max_length=20, unique=True)

    class Meta:
        verbose_name = '–£–º–µ–Ω–∏–µ'
        verbose_name_plural = '–£–º–µ–Ω–∏—è'

    def __str__(self):
        return self.rank


class Post(models.Model):
    date_time_start = models.DateTimeField('–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
    date_time_end = models.DateTimeField('–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
    description = models.TextField(
        verbose_name='–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        default='–í–æ–ª–µ–π–±–æ–ª, ¬´–ú—É—Å—Å–æ–Ω¬ª. –ò–≥—Ä–æ–∫–æ–≤: –º–∏–Ω.12/–º–∞—Ö.18.–°—Ç–æ–∏–º–æ—Å—Ç—å: ~100 - 150 —Ä—É–±. '
                '‚ö†–£ –∫–æ–≥–æ –µ—Å—Ç—å –º—è—á üèê, –ø—Ä–æ—Å—å–±–∞ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π. ‚ùó–ó–∞–ø–∏—Å–∞–ª—Å—è –∏ –Ω–µ –ø—Ä–∏—à—ë–ª? –ë–∞–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é',
        null=True,
        blank=True
    )
    category = models.ForeignKey(Category, on_delete=models.SET_NULL, verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è', null=True)
    reservation = models.PositiveSmallIntegerField(
        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç',
        default=18,
        validators=[MaxValueValidator(18), MinValueValidator(0)],
        blank=True
    )
    on_main = models.BooleanField('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É?', default=False)

    class Meta:
        verbose_name = '–ü—É–±–ª–∏–∫–∞—Ü–∏—è'
        verbose_name_plural = '–ü—É–±–ª–∏–∫–∞—Ü–∏–∏'

    def __str__(self):
        return f'[{self.category}] {self.date_time_start.strftime("%d.%m.%Y %H:%M")} - ' \
               f'{self.date_time_end.strftime("%d.%m.%Y %H:%M")}'


class Reservations(models.Model):
    title = models.ForeignKey(Post, on_delete=models.SET_NULL, null=True, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')
    players = models.ManyToManyField(User, verbose_name='–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    created_at = models.DateTimeField(auto_now_add=True)
    update_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≥—Ä—É'
        verbose_name_plural = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∏–≥—Ä—É'

    def __str__(self):
        return f'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞: {self.title.date_time_start.strftime("%d.%m.%Y %H:%M")}'
